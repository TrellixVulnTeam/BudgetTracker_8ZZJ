{"version":3,"file":"angular-paginator.service.d.ts","sources":["angular-paginator.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { AngularPaginatorInstance } from '../others/angular-paginator.interface';\nexport declare class AngularPaginatorService {\n    /** id is used to identify pagination instances */\n    id: string;\n    /** instances is the collection of pagination componetns */\n    instances: any;\n    /** emits an event with instance id whenever the page number changes */\n    change: EventEmitter<string>;\n    constructor();\n    /**\n     * creates an instance for every pipe differentiated with id\n     *\n     * @param instance each instance refers to a unique pagination component\n     */\n    registerInstance(instance: AngularPaginatorInstance): void;\n    /**\n     * updates existing pagination instances available\n     * and returns true if value has changed\n     *\n     * @param instance an unique pagination component\n     */\n    updateInstance(instance: AngularPaginatorInstance): boolean;\n    /**\n     * return instance with given id\n     *\n     * @param id unique id of the pagination component\n     */\n    getInstance(id: string): any;\n    /**\n     * return currentPage for given id\n     *\n     * @param id unique id of the pagination component\n     */\n    getCurrentPage(id: string): number;\n}\n"]}