{"version":3,"file":"angular-paginator.component.d.ts","sources":["angular-paginator.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\nimport { AngularPaginatorService } from './services/angular-paginator.service';\n/**\n * The component that renders the Pagination component template, It also accepts the inputs for the Pagination component\n */\nexport declare class AngularPaginatorComponent implements OnInit {\n    private angularPaginatorService;\n    /**\n     * Whether to display First / Last buttons\n     */\n    boundaryLinks: boolean;\n    /**\n     * Whether to display Previous / Next buttons\n     */\n    directionLinks: boolean;\n    /**\n     * Limit number for pagination size, i.e., the maximum page numbers to be displayed\n     */\n    maxSize: number;\n    /**\n     * Whether to keep current page in the middle of the visible ones\n     */\n    rotate: boolean;\n    /**\n     * Whether to always display the first and last page numbers.\n     * If max-size is smaller than the number of pages, then the first and last page numbers are still shown with ellipses\n     * in-between as necessary. NOTE: max-size refers to the center of the range.\n     * This option may add up to 2 more numbers on each side of the displayed range for the end value and\n     * what would be an ellipsis but is replaced by a number because it is sequential\n     */\n    boundaryLinkNumbers: boolean;\n    /**\n     * Also displays ellipses when rotate is true and maxSize is smaller than the number of pages forceEllipses\n     */\n    forceEllipses: boolean;\n    /**\n     * Use unique id when multiple paginations are being used on the same page.\n     * By Default Paginator uses id `ANGULAR_PAGINATOR_DEFAULT`\n     */\n    id: string;\n    /**\n     * Text for first button\n     */\n    firstText: string;\n    /**\n     * Text for previous button\n     */\n    previousText: string;\n    /**\n     * Text for next button\n     */\n    nextText: string;\n    /**\n     * Text for last button\n     */\n    lastText: string;\n    /**\n     * Screen reader text for first button\n     */\n    screenReaderFirstText: string;\n    /**\n     * Screen reader text for previous button\n     */\n    screenReaderPreviousText: string;\n    /**\n     * Screen reader text for next button\n     */\n    screenReaderNextText: string;\n    /**\n     * Screen reader text for lasr button\n     */\n    screenReaderLastText: string;\n    /**\n     * Screen reader text for page numbers\n     */\n    screenReaderPageText: string;\n    /**\n     * Screen reader text for current page\n     */\n    screenReaderCurrentPageText: string;\n    /**\n     * Screen reader text for the pagination component\n     */\n    screenReaderPaginationLabel: string;\n    /**\n     * Adds custom class to the pagination element\n     */\n    className: string;\n    /**\n     * Hides the pagination component if the items are less than `itemsPerPage`\n     */\n    autoHide: boolean;\n    /**\n     * disables pagination component\n     */\n    disabled: boolean;\n    /**\n     * Emits an event whenever the current page is changed, It emits the current page number\n     *\n     * This event is originally picked up from `AngularPaginatorDirective`\n     */\n    pageChange: EventEmitter<number>;\n    /**\n     *\n     * @param angularPaginatorService service for angular paginator\n     */\n    constructor(angularPaginatorService: AngularPaginatorService);\n    ngOnInit(): void;\n}\n"]}