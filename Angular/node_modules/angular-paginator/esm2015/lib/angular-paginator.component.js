import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';
import { AngularPaginatorService } from './services/angular-paginator.service';
/**
 * The component that renders the Pagination component template, It also accepts the inputs for the Pagination component
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './services/angular-paginator.service';
import * as ɵngcc2 from './directives/angular-paginator.directive';
import * as ɵngcc3 from '@angular/common';

const _c0 = function (a0) { return { "disabled": a0 }; };
function AngularPaginatorComponent_ng_container_2_ng_container_2_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7);
    ɵngcc0.ɵɵlistener("click", function AngularPaginatorComponent_ng_container_2_ng_container_2_li_2_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); ɵngcc0.ɵɵnextContext(3); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.toFirstPage(); });
    ɵngcc0.ɵɵelementStart(1, "a", 8);
    ɵngcc0.ɵɵelement(2, "span", 9);
    ɵngcc0.ɵɵelementStart(3, "span", 10);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c0, _r0.currentPage === _r0.firstPage || ctx_r3.disabled));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r3.firstText, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.screenReaderFirstText);
} }
function AngularPaginatorComponent_ng_container_2_ng_container_2_li_3_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7);
    ɵngcc0.ɵɵlistener("click", function AngularPaginatorComponent_ng_container_2_ng_container_2_li_3_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); ɵngcc0.ɵɵnextContext(3); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.toPreviousPage(); });
    ɵngcc0.ɵɵelementStart(1, "a", 8);
    ɵngcc0.ɵɵelement(2, "span", 9);
    ɵngcc0.ɵɵelementStart(3, "span", 10);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(3);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c0, _r0.currentPage === _r0.firstPage || ctx_r4.disabled));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r4.previousText, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.screenReaderPreviousText);
} }
function AngularPaginatorComponent_ng_container_2_ng_container_2_li_4_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const page_r12 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2("", ctx_r13.screenReaderPageText + " ", "", page_r12["text"], "");
} }
function AngularPaginatorComponent_ng_container_2_ng_container_2_li_4_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const page_r12 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2("", ctx_r14.screenReaderCurrentPageText + " ", "", page_r12["text"], "");
} }
const _c1 = function (a0, a1) { return { "active": a0, "disabled": a1 }; };
function AngularPaginatorComponent_ng_container_2_ng_container_2_li_4_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7);
    ɵngcc0.ɵɵlistener("click", function AngularPaginatorComponent_ng_container_2_ng_container_2_li_4_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const page_r12 = ctx.$implicit; ɵngcc0.ɵɵnextContext(3); const _r0 = ɵngcc0.ɵɵreference(1); return !page_r12["active"] && _r0.setCurrentPage(page_r12["number"]); });
    ɵngcc0.ɵɵelementStart(1, "a", 8);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵtemplate(3, AngularPaginatorComponent_ng_container_2_ng_container_2_li_4_span_3_Template, 2, 2, "span", 11);
    ɵngcc0.ɵɵtemplate(4, AngularPaginatorComponent_ng_container_2_ng_container_2_li_4_span_4_Template, 2, 2, "span", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const page_r12 = ctx.$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c1, page_r12["active"], ctx_r5.disabled));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", page_r12["text"], " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !page_r12["active"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", page_r12["active"]);
} }
function AngularPaginatorComponent_ng_container_2_ng_container_2_li_5_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7);
    ɵngcc0.ɵɵlistener("click", function AngularPaginatorComponent_ng_container_2_ng_container_2_li_5_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); ɵngcc0.ɵɵnextContext(3); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.toNextPage(); });
    ɵngcc0.ɵɵelementStart(1, "a", 8);
    ɵngcc0.ɵɵelement(2, "span", 9);
    ɵngcc0.ɵɵelementStart(3, "span", 10);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c0, _r0.currentPage === _r0.lastPage || ctx_r6.disabled));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r6.nextText, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r6.screenReaderNextText);
} }
function AngularPaginatorComponent_ng_container_2_ng_container_2_li_6_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7);
    ɵngcc0.ɵɵlistener("click", function AngularPaginatorComponent_ng_container_2_ng_container_2_li_6_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); ɵngcc0.ɵɵnextContext(3); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.toLastPage(); });
    ɵngcc0.ɵɵelementStart(1, "a", 8);
    ɵngcc0.ɵɵelement(2, "span", 9);
    ɵngcc0.ɵɵelementStart(3, "span", 10);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c0, _r0.currentPage === _r0.lastPage || ctx_r7.disabled));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r7.lastText, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r7.screenReaderLastText);
} }
function AngularPaginatorComponent_ng_container_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "ul", 4);
    ɵngcc0.ɵɵtemplate(2, AngularPaginatorComponent_ng_container_2_ng_container_2_li_2_Template, 5, 5, "li", 5);
    ɵngcc0.ɵɵtemplate(3, AngularPaginatorComponent_ng_container_2_ng_container_2_li_3_Template, 5, 5, "li", 5);
    ɵngcc0.ɵɵtemplate(4, AngularPaginatorComponent_ng_container_2_ng_container_2_li_4_Template, 5, 7, "li", 6);
    ɵngcc0.ɵɵtemplate(5, AngularPaginatorComponent_ng_container_2_ng_container_2_li_5_Template, 5, 5, "li", 5);
    ɵngcc0.ɵɵtemplate(6, AngularPaginatorComponent_ng_container_2_ng_container_2_li_6_Template, 5, 5, "li", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.className);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.boundaryLinks);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.directionLinks);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", _r0.pages);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.directionLinks);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.boundaryLinks);
} }
function AngularPaginatorComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "nav", 3);
    ɵngcc0.ɵɵtemplate(2, AngularPaginatorComponent_ng_container_2_ng_container_2_Template, 7, 6, "ng-container", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r1.screenReaderPaginationLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.pages["length"] !== 0);
} }
export class AngularPaginatorComponent {
    /**
     *
     * @param angularPaginatorService service for angular paginator
     */
    constructor(angularPaginatorService) {
        this.angularPaginatorService = angularPaginatorService;
        /**
         * Whether to display First / Last buttons
         */
        this.boundaryLinks = false;
        /**
         * Whether to display Previous / Next buttons
         */
        this.directionLinks = true;
        /**
         * Limit number for pagination size, i.e., the maximum page numbers to be displayed
         */
        this.maxSize = 5;
        /**
         * Whether to keep current page in the middle of the visible ones
         */
        this.rotate = true;
        /**
         * Whether to always display the first and last page numbers.
         * If max-size is smaller than the number of pages, then the first and last page numbers are still shown with ellipses
         * in-between as necessary. NOTE: max-size refers to the center of the range.
         * This option may add up to 2 more numbers on each side of the displayed range for the end value and
         * what would be an ellipsis but is replaced by a number because it is sequential
         */
        this.boundaryLinkNumbers = false;
        /**
         * Also displays ellipses when rotate is true and maxSize is smaller than the number of pages forceEllipses
         */
        this.forceEllipses = false;
        /**
         * Text for first button
         */
        this.firstText = 'First';
        /**
         * Text for previous button
         */
        this.previousText = 'Previous';
        /**
         * Text for next button
         */
        this.nextText = 'Next';
        /**
         * Text for last button
         */
        this.lastText = 'Last';
        /**
         * Screen reader text for first button
         */
        this.screenReaderFirstText = 'First';
        /**
         * Screen reader text for previous button
         */
        this.screenReaderPreviousText = 'Previous';
        /**
         * Screen reader text for next button
         */
        this.screenReaderNextText = 'Next';
        /**
         * Screen reader text for lasr button
         */
        this.screenReaderLastText = 'Last';
        /**
         * Screen reader text for page numbers
         */
        this.screenReaderPageText = 'Page';
        /**
         * Screen reader text for current page
         */
        this.screenReaderCurrentPageText = 'You`re on page';
        /**
         * Screen reader text for the pagination component
         */
        this.screenReaderPaginationLabel = 'Pagination';
        /**
         * Hides the pagination component if the items are less than `itemsPerPage`
         */
        this.autoHide = false;
        /**
         * disables pagination component
         */
        this.disabled = false;
        /**
         * Emits an event whenever the current page is changed, It emits the current page number
         *
         * This event is originally picked up from `AngularPaginatorDirective`
         */
        this.pageChange = new EventEmitter();
    }
    ngOnInit() {
        // set default id if not provided
        this.id = this.id ? this.id : this.angularPaginatorService.id;
        // set default class if not provided
        this.className = this.className ? this.className : this.angularPaginatorService.id;
    }
}
AngularPaginatorComponent.ɵfac = function AngularPaginatorComponent_Factory(t) { return new (t || AngularPaginatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AngularPaginatorService)); };
AngularPaginatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AngularPaginatorComponent, selectors: [["angular-paginator"]], inputs: { boundaryLinks: "boundaryLinks", directionLinks: "directionLinks", maxSize: "maxSize", rotate: "rotate", boundaryLinkNumbers: "boundaryLinkNumbers", forceEllipses: "forceEllipses", firstText: "firstText", previousText: "previousText", nextText: "nextText", lastText: "lastText", screenReaderFirstText: "screenReaderFirstText", screenReaderPreviousText: "screenReaderPreviousText", screenReaderNextText: "screenReaderNextText", screenReaderLastText: "screenReaderLastText", screenReaderPageText: "screenReaderPageText", screenReaderCurrentPageText: "screenReaderCurrentPageText", screenReaderPaginationLabel: "screenReaderPaginationLabel", autoHide: "autoHide", disabled: "disabled", id: "id", className: "className" }, outputs: { pageChange: "pageChange" }, decls: 3, vars: 8, consts: [[3, "id", "boundaryLinks", "directionLinks", "maxSize", "rotate", "boundaryLinkNumbers", "forceEllipses", "pageChange"], ["paginator", "angularPaginator"], [4, "ngIf"], [1, "angular-bs4-pagination"], [1, "pagination", 3, "ngClass"], ["class", "page-item", 3, "ngClass", "click", 4, "ngIf"], ["class", "page-item", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "page-item", 3, "ngClass", "click"], ["href", "javascript:void(0)", 1, "page-link"], ["aria-hidden", "true", 3, "innerHTML"], [1, "sr-only"], ["class", "sr-only", 4, "ngIf"]], template: function AngularPaginatorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "angularPaginator", 0, 1);
        ɵngcc0.ɵɵlistener("pageChange", function AngularPaginatorComponent_Template_angularPaginator_pageChange_0_listener($event) { return ctx.pageChange.emit($event); });
        ɵngcc0.ɵɵtemplate(2, AngularPaginatorComponent_ng_container_2_Template, 3, 2, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("id", ctx.id)("boundaryLinks", ctx.boundaryLinks)("directionLinks", ctx.directionLinks)("maxSize", ctx.maxSize)("rotate", ctx.rotate)("boundaryLinkNumbers", ctx.boundaryLinkNumbers)("forceEllipses", ctx.forceEllipses);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !(ctx.autoHide && _r0.pages["length"] <= 1));
    } }, directives: [ɵngcc2.AngularPaginatorDirective, ɵngcc3.NgIf, ɵngcc3.NgClass, ɵngcc3.NgForOf], styles: [".angular-bs4-pagination[_ngcontent-%COMP%]   .disabled[_ngcontent-%COMP%]{pointer-events:none}"], changeDetection: 0 });
AngularPaginatorComponent.ctorParameters = () => [
    { type: AngularPaginatorService }
];
AngularPaginatorComponent.propDecorators = {
    boundaryLinks: [{ type: Input }],
    directionLinks: [{ type: Input }],
    maxSize: [{ type: Input }],
    rotate: [{ type: Input }],
    boundaryLinkNumbers: [{ type: Input }],
    forceEllipses: [{ type: Input }],
    id: [{ type: Input }],
    firstText: [{ type: Input }],
    previousText: [{ type: Input }],
    nextText: [{ type: Input }],
    lastText: [{ type: Input }],
    screenReaderFirstText: [{ type: Input }],
    screenReaderPreviousText: [{ type: Input }],
    screenReaderNextText: [{ type: Input }],
    screenReaderLastText: [{ type: Input }],
    screenReaderPageText: [{ type: Input }],
    screenReaderCurrentPageText: [{ type: Input }],
    screenReaderPaginationLabel: [{ type: Input }],
    className: [{ type: Input }],
    autoHide: [{ type: Input }],
    disabled: [{ type: Input }],
    pageChange: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularPaginatorComponent, [{
        type: Component,
        args: [{
                selector: 'angular-paginator',
                template: "<angularPaginator [id]=\"id\" [boundaryLinks]=\"boundaryLinks\" [directionLinks]=\"directionLinks\" [maxSize]=\"maxSize\"\n  [rotate]=\"rotate\" [boundaryLinkNumbers]=\"boundaryLinkNumbers\" [forceEllipses]=\"forceEllipses\" #paginator=\"angularPaginator\"\n  (pageChange)=\"pageChange.emit($event)\">\n\n  <!-- ======================================== BOOTSTRAP 4 TEMPLATE ======================================== -->\n  <ng-container *ngIf=\"!(autoHide && paginator.pages['length'] <= 1)\">\n    <nav class=\"angular-bs4-pagination\" [attr.aria-label]=\"screenReaderPaginationLabel\">\n\n      <ng-container *ngIf=\"paginator.pages['length'] !== 0\">\n        <ul class=\"pagination\" [ngClass]=\"className\">\n\n          <!-- boundary link -->\n          <li class=\"page-item\" *ngIf=\"boundaryLinks\" (click)=\"paginator.toFirstPage()\" [ngClass]=\"{'disabled': (paginator.currentPage === paginator.firstPage) || disabled}\">\n            <a class=\"page-link\" href=\"javascript:void(0)\">\n              <span aria-hidden=\"true\" [innerHTML]=\"firstText\"></span>\n              <span class=\"sr-only\">{{ screenReaderFirstText }}</span>\n            </a>\n          </li>\n\n          <!-- direction link -->\n          <li class=\"page-item\" *ngIf=\"directionLinks\" (click)=\"paginator.toPreviousPage()\" [ngClass]=\"{'disabled': (paginator.currentPage === paginator.firstPage) || disabled}\">\n            <a class=\"page-link\" href=\"javascript:void(0)\">\n              <span aria-hidden=\"true\" [innerHTML]=\"previousText\"></span>\n              <span class=\"sr-only\">{{ screenReaderPreviousText }}</span>\n            </a>\n          </li>\n\n          <!-- pagination array -->\n          <li class=\"page-item\" *ngFor=\"let page of paginator.pages\" [ngClass]=\"{'active': page['active'], 'disabled': disabled}\"\n            (click)=\"!page['active'] && paginator.setCurrentPage(page['number'])\">\n            <a href=\"javascript:void(0)\" class=\"page-link\">\n              {{ page['text'] }}\n              <span class=\"sr-only\" *ngIf=\"!page['active']\">{{ screenReaderPageText + ' ' }}{{ page['text'] }}</span>\n              <span class=\"sr-only\" *ngIf=\"page['active']\">{{ screenReaderCurrentPageText + ' ' }}{{ page['text'] }}</span>\n            </a>\n          </li>\n\n          <!-- direction link -->\n          <li class=\"page-item\" *ngIf=\"directionLinks\" (click)=\"paginator.toNextPage()\" [ngClass]=\"{'disabled': (paginator.currentPage === paginator.lastPage) || disabled}\">\n            <a class=\"page-link\" href=\"javascript:void(0)\">\n              <span aria-hidden=\"true\" [innerHTML]=\"nextText\"></span>\n              <span class=\"sr-only\">{{ screenReaderNextText }}</span>\n            </a>\n          </li>\n\n          <!-- boundary link -->\n          <li class=\"page-item\" *ngIf=\"boundaryLinks\" (click)=\"paginator.toLastPage()\" [ngClass]=\"{'disabled': (paginator.currentPage === paginator.lastPage) || disabled}\">\n            <a class=\"page-link\" href=\"javascript:void(0)\">\n              <span aria-hidden=\"true\" [innerHTML]=\"lastText\"></span>\n              <span class=\"sr-only\">{{ screenReaderLastText }}</span>\n            </a>\n          </li>\n\n        </ul>\n      </ng-container>\n\n    </nav>\n  </ng-container>\n\n</angularPaginator>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".angular-bs4-pagination .disabled{pointer-events:none}"]
            }]
    }], function () { return [{ type: ɵngcc1.AngularPaginatorService }]; }, { boundaryLinks: [{
            type: Input
        }], directionLinks: [{
            type: Input
        }], maxSize: [{
            type: Input
        }], rotate: [{
            type: Input
        }], boundaryLinkNumbers: [{
            type: Input
        }], forceEllipses: [{
            type: Input
        }], firstText: [{
            type: Input
        }], previousText: [{
            type: Input
        }], nextText: [{
            type: Input
        }], lastText: [{
            type: Input
        }], screenReaderFirstText: [{
            type: Input
        }], screenReaderPreviousText: [{
            type: Input
        }], screenReaderNextText: [{
            type: Input
        }], screenReaderLastText: [{
            type: Input
        }], screenReaderPageText: [{
            type: Input
        }], screenReaderCurrentPageText: [{
            type: Input
        }], screenReaderPaginationLabel: [{
            type: Input
        }], autoHide: [{
            type: Input
        }], disabled: [{
            type: Input
        }], pageChange: [{
            type: Output
        }], id: [{
            type: Input
        }], className: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,